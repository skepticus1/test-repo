first line
second line, git commit --amend

git status                      : shows status of the repo
git add myfile.txt              : stages the file
git commit myfile.txt           : commits file
git commit --amend myfile.txt   : commits file, but doesn't make a new commit.
git log                         : shows the repo's commit log
    (when the log is long, press q, to exit it)
git restore --staged myfile.txt : removes file from staged
git restore myfile.txt          : overwrites the working file with the staged file.
                                : undos the changes if no staged file
    (there are two files: one you can edit, the working file. two the staged file.)
git add .                       : stages all unstaged changes
git commit -m "myCommitMsg"     : commits, -m for message
git rm filename.file            : removes the files from the working directory
git add -u                      : like git add . , but doesn't stage new files
git commit -a                   : like git add -u , doesn't stage new files
git revert "commitIDhash        : undos the commit and leaves a recorded in the git log
git reset HEAD~                 : undos the commit no log. can undo the undo from revert.
    (git restore Item.h will need to be entered to bring it back)
git reset HEAD~2                : undos the last two commits
git branch                      : shows current working branch. * annotates current branch
git branch myfeature            : creates branch myfeature
git checkout myfeature          : switches to myfeature branch
    (changes made while on myfeature branch won't show on main branch, and viceversa)
git checkout -b health.h        : creates and switches to health.h branch
git merge health.h              : merge of health.h into master
    (fast-forward merge just moves the master point to the health.h branch,
     because there we're no changes in the master branch at the time of the merge
     recursive merge and ort merge exist too. three way merge. merge of tip of two branches
     and the commit the merge was from.)
git branch -d health.h          : deletes the health.h branch
git clear                       : clears the cli
git branch -D myfeature         : force deletes a branch, even if it has changes that aren't merged into master
git log --pretty=oneline        : shows the commits one per line. easy to read.
